apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-08-17T09:29:18Z"
    labels:
      com.docker.service.id: hi-there-general-kenobi-db
      com.docker.service.name: db
      com.docker.stack.namespace: hi-there-general-kenobi
    name: db
    namespace: default
    ownerReferences:
    - apiVersion: compose.docker.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Stack
      name: hi-there-general-kenobi
      uid: f430e8a7-4059-4280-adbd-eebf60c61871
    resourceVersion: "240965"
    selfLink: /api/v1/namespaces/default/services/db
    uid: 2f96ad42-50aa-45f6-8bac-15715b345f91
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      protocol: TCP
      targetPort: 55555
    selector:
      com.docker.service.id: hi-there-general-kenobi-db
      com.docker.service.name: db
      com.docker.stack.namespace: hi-there-general-kenobi
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-08-17T09:29:18Z"
    labels:
      com.docker.service.id: hi-there-general-kenobi-web
      com.docker.service.name: web
      com.docker.stack.namespace: hi-there-general-kenobi
    name: web
    namespace: default
    ownerReferences:
    - apiVersion: compose.docker.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Stack
      name: hi-there-general-kenobi
      uid: f430e8a7-4059-4280-adbd-eebf60c61871
    resourceVersion: "240971"
    selfLink: /api/v1/namespaces/default/services/web
    uid: 3fdc7965-c2f3-40e9-9867-0e9b6017986a
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      protocol: TCP
      targetPort: 55555
    selector:
      com.docker.service.id: hi-there-general-kenobi-web
      com.docker.service.name: web
      com.docker.stack.namespace: hi-there-general-kenobi
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-08-17T09:29:18Z"
    labels:
      com.docker.service.id: hi-there-general-kenobi-web
      com.docker.service.name: web
      com.docker.stack.namespace: hi-there-general-kenobi
    name: web-published
    namespace: default
    ownerReferences:
    - apiVersion: compose.docker.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Stack
      name: hi-there-general-kenobi
      uid: f430e8a7-4059-4280-adbd-eebf60c61871
    resourceVersion: "241017"
    selfLink: /api/v1/namespaces/default/services/web-published
    uid: 0a0dc99a-8956-49c1-8385-da84831dcba2
  spec:
    clusterIP: 10.103.217.66
    externalTrafficPolicy: Cluster
    ports:
    - name: 8094-tcp
      nodePort: 31089
      port: 8094
      protocol: TCP
      targetPort: 80
    selector:
      com.docker.service.id: hi-there-general-kenobi-web
      com.docker.service.name: web
      com.docker.stack.namespace: hi-there-general-kenobi
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: localhost
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2020-08-17T09:29:18Z"
    labels:
      com.docker.service.id: hi-there-general-kenobi-words
      com.docker.service.name: words
      com.docker.stack.namespace: hi-there-general-kenobi
    name: words
    namespace: default
    ownerReferences:
    - apiVersion: compose.docker.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Stack
      name: hi-there-general-kenobi
      uid: f430e8a7-4059-4280-adbd-eebf60c61871
    resourceVersion: "241013"
    selfLink: /api/v1/namespaces/default/services/words
    uid: 856473b1-ea01-4cf3-b6f0-504f21f29992
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      protocol: TCP
      targetPort: 55555
    selector:
      com.docker.service.id: hi-there-general-kenobi-words
      com.docker.service.name: words
      com.docker.stack.namespace: hi-there-general-kenobi
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      com.docker.stack.expected-generation: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-08-17T09:29:18Z"
    generation: 1
    labels:
      com.docker.service.id: hi-there-general-kenobi-db
      com.docker.service.name: db
      com.docker.stack.namespace: hi-there-general-kenobi
    name: db
    namespace: default
    ownerReferences:
    - apiVersion: compose.docker.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Stack
      name: hi-there-general-kenobi
      uid: f430e8a7-4059-4280-adbd-eebf60c61871
    resourceVersion: "241051"
    selfLink: /apis/apps/v1/namespaces/default/deployments/db
    uid: b8a2f219-5bf9-4ea8-b243-0af0177f5307
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        com.docker.service.id: hi-there-general-kenobi-db
        com.docker.service.name: db
        com.docker.stack.namespace: hi-there-general-kenobi
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          com.docker.service.id: hi-there-general-kenobi-db
          com.docker.service.name: db
          com.docker.stack.namespace: hi-there-general-kenobi
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - image: dockersamples/k8s-wordsmith-db
          imagePullPolicy: IfNotPresent
          name: db
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-08-17T09:29:20Z"
      lastUpdateTime: "2020-08-17T09:29:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-08-17T09:29:18Z"
      lastUpdateTime: "2020-08-17T09:29:20Z"
      message: ReplicaSet "db-76f5dbd7d8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      com.docker.stack.expected-generation: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-08-17T09:29:18Z"
    generation: 1
    labels:
      com.docker.service.id: hi-there-general-kenobi-web
      com.docker.service.name: web
      com.docker.stack.namespace: hi-there-general-kenobi
    name: web
    namespace: default
    ownerReferences:
    - apiVersion: compose.docker.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Stack
      name: hi-there-general-kenobi
      uid: f430e8a7-4059-4280-adbd-eebf60c61871
    resourceVersion: "241079"
    selfLink: /apis/apps/v1/namespaces/default/deployments/web
    uid: 171e4952-ddfc-4340-9cd3-c3e77afb91c5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        com.docker.service.id: hi-there-general-kenobi-web
        com.docker.service.name: web
        com.docker.stack.namespace: hi-there-general-kenobi
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          com.docker.service.id: hi-there-general-kenobi-web
          com.docker.service.name: web
          com.docker.stack.namespace: hi-there-general-kenobi
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - image: dockersamples/k8s-wordsmith-web
          imagePullPolicy: IfNotPresent
          name: web
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-08-17T09:29:21Z"
      lastUpdateTime: "2020-08-17T09:29:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-08-17T09:29:18Z"
      lastUpdateTime: "2020-08-17T09:29:21Z"
      message: ReplicaSet "web-5fd494c5c5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      com.docker.stack.expected-generation: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2020-08-17T09:29:18Z"
    generation: 1
    labels:
      com.docker.service.id: hi-there-general-kenobi-words
      com.docker.service.name: words
      com.docker.stack.namespace: hi-there-general-kenobi
    name: words
    namespace: default
    ownerReferences:
    - apiVersion: compose.docker.com/v1alpha3
      blockOwnerDeletion: true
      controller: true
      kind: Stack
      name: hi-there-general-kenobi
      uid: f430e8a7-4059-4280-adbd-eebf60c61871
    resourceVersion: "241084"
    selfLink: /apis/apps/v1/namespaces/default/deployments/words
    uid: 6574bf29-1799-4445-a8d1-e793786f57be
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 3
    selector:
      matchLabels:
        com.docker.service.id: hi-there-general-kenobi-words
        com.docker.service.name: words
        com.docker.stack.namespace: hi-there-general-kenobi
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          com.docker.service.id: hi-there-general-kenobi-words
          com.docker.service.name: words
          com.docker.stack.namespace: hi-there-general-kenobi
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - image: dockersamples/k8s-wordsmith-api
          imagePullPolicy: IfNotPresent
          name: words
          resources:
            limits:
              memory: "52428800"
            requests:
              memory: "52428800"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2020-08-17T09:29:21Z"
      lastUpdateTime: "2020-08-17T09:29:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-08-17T09:29:18Z"
      lastUpdateTime: "2020-08-17T09:29:21Z"
      message: ReplicaSet "words-54fdd59495" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
