apiVersion: v1
items:
# Service: hej-verden-db
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      com.docker.service.id: hej-verden-db
      com.docker.service.name: db
      com.docker.stack.namespace: hej-verden
    name: db
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      protocol: TCP
      targetPort: 55555
    selector:
      com.docker.service.id: hej-verden-db
      com.docker.service.name: db
      com.docker.stack.namespace: hej-verden
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
# Service: hej-verden-web, intern adresse
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      com.docker.service.id: hej-verden-web
      com.docker.service.name: web
      com.docker.stack.namespace: hej-verden
    name: web
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      protocol: TCP
      targetPort: 55555
    selector:
      com.docker.service.id: hej-verden-web
      com.docker.service.name: web
      com.docker.stack.namespace: hej-verden
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
# Service: hej-verden-web, 'ekstern' adresse
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      com.docker.service.id: hej-verden-web
      com.docker.service.name: web
      com.docker.stack.namespace: hej-verden
    name: web-published
  spec:
    clusterIP: 10.109.33.31
    externalTrafficPolicy: Cluster
    ports:
    - name: 8094-tcp
      nodePort: 31389
      port: 8094
      protocol: TCP
      targetPort: 80
    selector:
      com.docker.service.id: hej-verden-web
      com.docker.service.name: web
      com.docker.stack.namespace: hej-verden
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: localhost
# Service: hej-verden-words
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      com.docker.service.id: hej-verden-words
      com.docker.service.name: words
      com.docker.stack.namespace: hej-verden
    name: words
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      protocol: TCP
      targetPort: 55555
    selector:
      com.docker.service.id: hej-verden-words
      com.docker.service.name: words
      com.docker.stack.namespace: hej-verden
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
# Deployment: hej-verden-db
- apiVersion: apps/v1
  kind: Deployment
  metadata:    
    labels:
      com.docker.service.id: hej-verden-db
      com.docker.service.name: db
      com.docker.stack.namespace: hej-verden
    name: db
    namespace: default    
  spec:    
    replicas: 1    
    selector:
      matchLabels:
        com.docker.service.id: hej-verden-db
        com.docker.service.name: db
        com.docker.stack.namespace: hej-verden    
    template:
      metadata:        
        labels:
          com.docker.service.id: hej-verden-db
          com.docker.service.name: db
          com.docker.stack.namespace: hej-verden
      spec:        
        containers:
        - image: dockersamples/k8s-wordsmith-db          
          name: db          
        dnsPolicy: ClusterFirst
        restartPolicy: Always  
# Deployment: hej-verden-web
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      com.docker.service.id: hej-verden-web
      com.docker.service.name: web
      com.docker.stack.namespace: hej-verden
    name: web
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        com.docker.service.id: hej-verden-web
        com.docker.service.name: web
        com.docker.stack.namespace: hej-verden
    template:
      metadata:
        labels:
          com.docker.service.id: hej-verden-web
          com.docker.service.name: web
          com.docker.stack.namespace: hej-verden
      spec:
        containers:
        - image: dockersamples/k8s-wordsmith-web
          name: web
          ports:
          - containerPort: 80
            protocol: TCP
        dnsPolicy: ClusterFirst
        restartPolicy: Always
# Deployment: hej-verden-words
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      com.docker.service.id: hej-verden-words
      com.docker.service.name: words
      com.docker.stack.namespace: hej-verden
    name: words
  spec:
    replicas: 5
    selector:
      matchLabels:
        com.docker.service.id: hej-verden-words
        com.docker.service.name: words
        com.docker.stack.namespace: hej-verden
    template:
      metadata:
        labels:
          com.docker.service.id: hej-verden-words
          com.docker.service.name: words
          com.docker.stack.namespace: hej-verden
      spec:
        containers:
        - image: dockersamples/k8s-wordsmith-api
          name: words
          resources:
            limits:
              memory: "52428800"
            requests:
              memory: "52428800"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
kind: List